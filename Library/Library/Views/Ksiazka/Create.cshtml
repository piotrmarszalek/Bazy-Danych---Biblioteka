@model Library.Models.Ksiazka


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Ksiazka</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nazwa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nazwa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nazwa, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (ViewBag.wszyscyAutorzy.Count == 0)
        {
            <p>Brak autorów w bazie danych - dodaj autorów, aby następnie dodać ich książkę.</p>
        }
        else
        {
            <p>Autorzy</p>
            for (int i = 0; i < ViewBag.wszyscyAutorzy.Count; i++)
            {
                <input type="checkbox" 
                     name="wybraniAutorzy"
                     value="@ViewBag.wszyscyAutorzy[i].AutorId" 
                     id=@ViewBag.wszyscyAutorzy[i].Imie + @ViewBag.wszyscyAutorzy[i].Nazwisko />

                     @ViewBag.wszyscyAutorzy[i].Imie  @ViewBag.wszyscyAutorzy[i].Nazwisko  <br />
            }

        }

        @if (ViewBag.wszystkieGatunki.Count == 0)
        {
            <p>Brak gatunków w bazie danych - dodaj gatunek, aby następnie dodać książkę z tego gatunku.</p>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Gatunek, "Gatunek", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.GatunekId, new SelectList(@ViewBag.wszystkieGatunki, "GatunekId", "Nazwa"))
                    @Html.ValidationMessageFor(model => model.GatunekId)
                </div>
            </div>
        }

        @if (ViewBag.wszystkieWydawnictwa.Count == 0)
        {
            <p>Brak wydawnictw w bazie danych - dodaj wydawnictwo, aby następnie dodać książkę z tego wydawnictwa.</p>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Wydawnictwo, "Wydawnictwo", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.WydawnictwoId, new SelectList(@ViewBag.wszystkieWydawnictwa, "WydawnictwoId", "Nazwa"))
                    @Html.ValidationMessageFor(model => model.WydawnictwoId)
                </div>
            </div>
        }

        @if (ViewBag.wszystkieWydawnictwa.Count > 0 && ViewBag.wszystkieGatunki.Count > 0 && ViewBag.wszyscyAutorzy.Count > 0)
        {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Dodaj" class="btn btn-default" />
            </div>
        </div>
        }
    </div>
}

<div>
    @Html.ActionLink("Powrót do listy książek", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
